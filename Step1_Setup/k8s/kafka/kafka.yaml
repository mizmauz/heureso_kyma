apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zookeeper
    version: 1-sles
    env: dev
  name: zookeeper
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  strategy: {}
  template:
    metadata:
      labels:
        app: zookeeper
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 2181
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 125m
              memory: 250Mi
          livenessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 5
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 5
            failureThreshold: 5
            periodSeconds: 10
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper
  name: zookeeper
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 32181
      name: zookeeper
      targetPort: 2181
      protocol: TCP
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
    version: 1-sles
  name: kafka
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy: {}
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka.default.svc.cluster.local:29092,OUTSIDE://localhost:30001"
            - name: KAFKA_LISTENERS
              value: "INSIDE://:29092,OUTSIDE://:30001"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INSIDE"
            - name: INTERNAL_ZOOKEEPER
              value: "false"
            - name: KAFKA_BROKER_ID
              value: "0"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:32181
            - name: KAFKA_PORT
              value: "29092"
          image: wurstmeister/kafka:2.13-2.8.1
          imagePullPolicy: Always
          name: kafka
          ports:
            - containerPort: 29092
            - containerPort: 30001
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 125m
              memory: 250Mi
          livenessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 5
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 5
            failureThreshold: 5
            periodSeconds: 10
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka-outer
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 30001
      name: outerport
      targetPort: 30001
      nodePort: 30001
      protocol: TCP
  selector:
    app: kafka
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
    env: dev
  name: kafka
  namespace: default
spec:
  ports:
    - port: 29092
      name: innerport
      targetPort: 29092
      protocol: TCP
  selector:
    app: kafka
